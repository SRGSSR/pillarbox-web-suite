import { afterEach, beforeAll, beforeEach, describe, expect, it } from 'vitest';
import {{platform}} from '{{importAlias}}';
import {{properCase name}} from '../src/{{kebabCase name}}.js';

window.HTMLMediaElement.prototype.load = () => {};

describe('{{properCase name}}', () => {
  let player, videoElement;

  beforeAll(() => {
    document.body.innerHTML = '<video id="test-video" class="video-js"></video>';
    videoElement = document.querySelector('#test-video');
  });

  beforeEach(() => {
{{#ifEq type 'Plugin'}}
    player = {{platform}}(videoElement, {
      plugins: {
        {{camelCase name}}: true
      }
    });
{{else}}
    player = {{platform}}(videoElement, {
      {{camelCase name}}: true
    });
{{/ifEq}}
  });

  afterEach(() => {
    player.dispose();
  });

  it('should be registered and attached to the player', () => {
{{#ifEq type 'Plugin'}}
    expect({{platform}}.getPlugin('{{camelCase name}}')).toBe({{properCase name}});
{{else}}
    expect({{platform}}.getComponent('{{properCase name}}')).toBe({{properCase name}});
{{/ifEq}}
    expect(player.{{camelCase name}}).toBeDefined();
    expect({{properCase name}}.VERSION).toBeDefined();
  });
});

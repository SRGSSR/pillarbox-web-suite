import { afterEach, beforeAll, beforeEach, describe, expect, it } from 'vitest';
import pillarbox from '@srgssr/pillarbox-web';
import {{properCase name}} from '../src/{{kebabCase name}}.js';

window.HTMLMediaElement.prototype.load = () => {};

describe('{{properCase name}}', () => {
  let player, videoElement;

  beforeAll(() => {
    document.body.innerHTML = '<video id="test-video" class="video-js"></video>';
    videoElement = document.querySelector('#test-video');
  });

  beforeEach(() => {
{{#ifEq type 'Plugin'}}
    player = pillarbox(videoElement, {
      plugins: {
        {{camelCase name}}: true
      }
    });
{{else}}
    player = pillarbox(videoElement, {
      {{properCase name}}: true
    });
{{/ifEq}}
  });

  afterEach(() => {
    player.dispose();
  });

  it('should be registered and attached to the player', () => {
{{#ifEq type 'Plugin'}}
    expect(pillarbox.getPlugin('{{camelCase name}}')).toBe({{properCase name}});
    expect(player.{{camelCase name}}).toBeDefined();
{{else}}
    expect(pillarbox.getComponent('{{properCase name}}')).toBe({{properCase name}});
    expect(player.{{properCase name}}).toBeDefined();
{{/ifEq}}
  });
});
